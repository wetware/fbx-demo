services:
  app:
    image: wetware/fbx-demo-app
    container_name: fbx-demo-app
    # network_mode: host
    networks:
      - multicast_network
    environment:
      - TIKTOK_HOST=tiktok
      - TIKTOK_PORT=6060
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: no
    tty: true
    privileged: true
    working_dir: /app
    command: sh -c "sleep 3s && ./app"
    depends_on:
      - tiktok
      - wetware

  wetware:
    image: wetware/fbx-demo-wetware
    container_name: wetware
    # network_mode: host
    networks:
      - multicast_network
    volumes:
      # Dstack-specific
      - type: bind
        source: ${TAPPD_SOCKET}
        target: /var/run/tappd.sock
      - type: bind
        source: ${DSTACK_SOCKET}
        target: /var/run/dstack.sock
    environment:
      - DSTACK_SIMULATOR_ENDPOINT=/var/run/dstack.sock
      - DEBUG=true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: no
    # stdin_open: true
    tty: true
    privileged: true
    working_dir: /pkg
    command: ww start

  tiktok:
    image: tikapi/tikapi
    container_name: tikapi
    # network_mode: host
    networks:
      - multicast_network
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - API_KEY=${API_KEY}
      - ACCOUNT_KEY=${ACCOUNT_KEY}
      - TIKTOK_HOST=${TIKTOK_HOST}
      - TIKTOK_PORT=${TIKTOK_PORT}
    working_dir: /
    command: python -m tiktok.api.server
    # The command bellow is used to test the pycapnp library
    # command: sh -c "python -m tiktok.api.server & sleep 1s && python -m tiktok.api.test.client"
    # command: sh -c "python -m tiktok.api.tiktok_client 7511959726389857558"
    restart: no

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    networks:
      - multicast_network
    volumes:
      - ollama:/root/.ollama
      - ./ollama/start.sh:/start.sh
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/ready"]
      interval: 2s
      timeout: 1s
      retries: 300 # The init script can take a while the first time it's run
      start_period: 2s
    entrypoint: ["/bin/sh", "/start.sh"]
    restart: no
networks:
  multicast_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "true"
    ipam:
      config:
        - subnet: 172.25.0.0/16
